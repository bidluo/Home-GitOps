---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  interval: 5m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: 56.6.1
      sourceRef:
        kind: HelmRepository
        name: prometheus-charts
        namespace: flux-system
      interval: 5m
  values:
    prometheus-node-exporter:
      tolerations:
        - effect: NoSchedule
          operator: Exists
        - effect: NoExecute
          operator: Exists
    prometheusOperator:
      createCustomResource: false
    kubeControllerManager:
      enabled: false
    kubeScheduler:
      enabled: false
    kubeEtcd:
      enabled: false
    kubeProxy:
      enabled: false
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: 'null'
          - name: 'discord'
            discord_configs:
              - webhook_url: "${MONITORING_DISCORD_WEBHOOK}"
                title: |-
                  {{- if eq .Status "firing" -}}
                    ðŸ”¥ {{ len .Alerts.Firing }} Firing
                  {{- else -}}
                    âœ… {{ len .Alerts.Resolved }} Resolved
                  {{- end -}}
                text: >-
                  {{ range .Alerts -}}
                    **Alert:** {{ .Annotations.title }}{{ if .Labels.severity }} `{{ .Labels.severity }}`{{ end }}
                  {{ if ne .Annotations.summary ""}}**Summary:** {{ .Annotations.summary }} {{ else if ne .Annotations.message ""}}**Message:** {{ .Annotations.message }} {{ else if ne .Annotations.description ""}}**Description:** {{ .Annotations.description }}{{ end }}
                    **Details:**
                    {{ range .Labels.SortedPairs }} â€¢ {{ .Name }}: `{{ .Value }}`
                    {{ end }}
                  {{ end }}
        route:
          group_by: ['alertname', 'job']
          group_wait: 30s
          group_interval: 5m
          repeat_interval: 6h
          receiver: 'discord'
          routes:
            - receiver: 'null'
              matchers:
                - severity =~ "none"
            - receiver: 'discord'
    grafana:
      enabled: true
      envFromSecret: grafana-secrets
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: "default"
              orgId: 1
              folder: ""
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      plugins:
        - grafana-piechart-panel
      dashboards:
        default:
          flux-cluster:
            url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/cluster.json
            datasource: Prometheus
          flux-control-plane:
            url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/monitoring-config/dashboards/control-plane.json
            datasource: Prometheus
          cnpg:
            url: https://raw.githubusercontent.com/cloudnative-pg/charts/main/charts/cloudnative-pg/monitoring/grafana-dashboard.json
            datasource: Prometheus
          cert-manager:
            gnetId: 11001
            revision: 1
            datasource: Prometheus
          redis:
            gnetId: 11835
            revision: 1
            datasource: Prometheus
          postgresql:
            gnetId: 9628
            revision: 7
            datasource: Prometheus
          traefik:
            gnetId: 12250
            revision: 1
            datasource: Prometheus
      sidecar:
        dashboards:
          enabled: true
          searchNamespace: ALL
        datasources:
          enabled: true
          searchNamespace: ALL
      serviceMonitor:
        enabled: true
      ingress:
        enabled: true
        pathType: Prefix
        hosts:
          - "grafana.${PUBLIC_HOSTNAME}"
    prometheus:
      prometheusSpec:
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        retention: 7d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: longhorn-xfs
              resources:
                requests:
                  storage: 40Gi
