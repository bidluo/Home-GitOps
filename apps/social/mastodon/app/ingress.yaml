---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mastodon-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: "letsencrypt-production"
spec:
  tls:
    - hosts:
        - "mast.${PUBLIC_HOSTNAME}"
      secretName: mastodon-tls
  rules:
    - host: "mast.${PUBLIC_HOSTNAME}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mastodon
                port:
                  number: 3000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mastodon-streaming-ingress
  annotations:
    kubernetes.io/ingress.class: traefik
    cert-manager.io/cluster-issuer: "letsencrypt-production"
spec:
  tls:
    - hosts:
        - "streaming.mast.${PUBLIC_HOSTNAME}"
      secretName: mastodon-streaming-tls
  rules:
    - host: "streaming.mast.${PUBLIC_HOSTNAME}"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: mastodon-streaming
                port:
                  number: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mastodon-webfinger-redirect
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
spec:
  ingressClassName: traefik
  tls:
    - hosts:
        - "${PUBLIC_HOSTNAME}"
      secretName: mastodon-webfinger-tls
  rules:
  - host: "${PUBLIC_HOSTNAME}"
    http:
      paths:
        - path: /.well-known
          pathType: Prefix
          backend:
            service:
              name: mastodon-web
              port:
                number: 80
